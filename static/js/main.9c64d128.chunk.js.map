{"version":3,"sources":["walk.js","actions/app.js","components/Common/customTheme.js","components/Common/Transition.js","components/Common/GameAppBar.js","actions/constants.js","actions/snackbar.js","components/Common/GameSnackbar.js","utils/tronCommon.js","reducers/app.js","reducers/snackbar.js","reducers/index.js","utils/tronMain.js","components/TronMax/DailyDivs.js","utils/tronAccountDetails.js","store/index.js","utils/math.js","utils/tracker.js","utils/parseQueryString.js","components/TronMax/AccountDetails.js","components/Common/RoutingScreen.js","components/Common/Footer.js","components/App.js","serviceWorker.js","index.js"],"names":["$","walkDistance","width","window","height","ratio","show","walk","left","offset","css","animate","addClass","removeClass","resize","SET_SCREEN","SCREEN_VAULT","RELOAD_ACCOUNT","setScreen","screen","type","payload","createMuiTheme","typography","useNextVariants","palette","primary","light","main","dark","contrastText","secondary","third","action","important","warning","slider","trackSize","handleSize","Transition","props","react_default","a","createElement","Slide_default","Object","assign","direction","TT_URL","TG_URL","GameAppBar","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setActiveLanguage","code","Lockr","set","setState","mobileOpen","getFlagUrl","concat","getLogoImage","navigateTo","home","openTSC","open","openTronScan","handleDrawerToggle","state","openWechat","wechatOpen","closeWechat","languages","name","anchorEl","addTranslation","siteTranslations","activeLanguageCode","get","Dialog_default","onClose","TransitionComponent","AppBar_default","position","className","Toolbar_default","Tooltip_default","title","IconButton_default","color","onClick","aria-label","Close_default","Typography_default","variant","react_localize_redux_es","id","Card_default","src","alt","_this2","disableRipple","map","lang","key","href","rel","target","_this3","Menu_default","Drawer_default","container","anchor","List_default","ListItem_default","button","Divider_default","renderDesktop","renderMobile","Component","mapDispatchToProps","connect","withLocalize","RESET_STATE","SHOW_SNACKBAR","HIDE_SNACKBAR","showSnackbar","message","duration","snackbarOpen","snackbarMessage","snackbarVariant","autoHideDuration","SNACKBAR_WARNING","SNACKBAR_ERROR","SNACKBAR_INFO","variantIcon","success","CheckCircleIcon","WarningIcon","error","ErrorIcon","info","InfoIcon","MySnackbarContentWrapper","withStyles","theme","backgroundColor","icon","fontSize","iconVariant","opacity","marginRight","spacing","unit","display","alignItems","classes","other","objectWithoutProperties","Icon","SnackbarContent_default","classNames","core_IconButton_default","close","hideSnackbar","snackbar","_ref","Snackbar_default","anchorOrigin","vertical","horizontal","indexOf","TRON_WEB_STATE_NOT_MAINNET","FOUNDATION_ADDRESS","injectTronWeb","asyncToGenerator","regenerator_default","mark","_callee","defaultTronWeb","wrap","_context","prev","next","abrupt","Promise","resolve","tronWebState","tries","timer","setInterval","tronWeb","clearInterval","ready","stop","_x","apply","arguments","initContract","_ref2","_callee2","contractAddress","contract","_context2","at","sent","t0","console","_x2","_x3","_x4","trxToSun","trx","sunToTrx","sun","isNaN","getDateTimeLongFromUnix","unix","date","Date","d","month","getMonth","day","getDate","year","getFullYear","hour","getHours","minute","getMinutes","length","join","initialState","currentAddress","loadDataInterval","reducers","app","undefined","objectSpread","index","createStore","combineReducers","__REDUX_DEVTOOLS_EXTENSION__","toTruncateDown","value","n","Math","pow","v","toString","split","f","substr","TronWeb","defaultAddress","hex","address","toHex","base58","initDefaultTronWeb","tronMain","initTronWeb","_initTronWeb","store","dispatch","on","needsToNotify","reloadAccountNonce","uuid","getCurrentAddress","currentAddressBalance","_currentAddressBalance","_callee3","balance","_context3","getBalance","_getBalance","_callee4","_context4","BigNumber","toNumber","getPlayerCount","_getPlayerCount","_callee5","playerCode","latestCode","playerCount","_context5","getLatestReferrerCode","getDivsAllData","_getDivsAllData","_callee6","data","playerUID","playerInfo","currentDividends","i","newDividends","j","hourlyProductions","k","hourlyProductionMin","hourlyProductionMax","playerInvestment","playerInvestments","playerTotalInvestment","investmentCount","_k","inv","investmentDate","investment","currentDividend","currentInterest","daysPassed","isBoost","_context6","withdrawable","referral","getUIDByAddress","getInvestorInfoByUID","referrerEarnings","availableReferrerEarnings","referrerCode","referrer","level1RefCount","level2RefCount","level3RefCount","planCount","lastWithdrawalDate","getHourlyProduction","getInvestmentPlanByUID","investments","investmentDates","currentInterests","isBoosts","push","currentDivsAddressBalance","_currentDivsAddressBalance","_callee7","_context7","invest","_invest","_callee8","sendAmount","payAmount","_context8","send","feeLimit","callValue","shouldPollResponse","boost","_boost","_callee9","_context9","withdrawDivs","_withdrawDivs","_callee10","_context10","withdraw","getLaunchDate","_getLaunchDate","_callee11","_context11","launchDate","isOpen","tracker","initialize","pageview","rawPath","trackerNames","event","category","label","nonInteraction","transport","parseReferralAddress","storedReferralAddress","referralAddress","qs","parse","location","search","floor","Number","Infinity","String","isValidCode","log","parseGameRoute","depositAmount","accountValidForReferral","accountBalance","contractBalance","donationAmount","MINIMUM_DEPOSIT_GAS_FEE","MINIMUM_WITHDRAW_GAS_FEE","MINIMUM_DEPOSIT","renderer","days","hours","minutes","seconds","completed","Button_default","reload","DailyDivs","loadData","loadPlayerData","loadDivsData","getPlayerData","isDepositDisabled","_this$state","investmentDivs","formatAmount","amount","formattedAmount","replace","trim","getPlanInfo","planId","planData","copyLink","myReferralLink","Tracker","handleDepositAmountChange","_ref6","deposit","_this$state2","_this$state3","prevProps","index_es","toDate","_this$state4","investId","rateId","styles","customTheme","Grid_default","item","xs","renderCountdown","data-id","toLocaleString","amt","md","TextField_default","autoComplete","onChange","InputProps","endAdornment","margin","disabled","imgUrl","investmentLabel","lib","text","onCopy","FileCopy_default","ratesData","rate","interest","mined","boostRatesData","React","&:hover","tronAccountDetails","_getPlayerData","myTokens","myDividends","myRoundStats","myReferrals","isValidAddress","getPlayerInfoCurrentRound","wei","myRoundBuy","myRoundSell","balanceOf","_balanceOf","isAddress","accountAddress","AccountDetails","TronAccountDetails","_ref3","playerData","handleChange","_ref4","defineProperty","core_Card_default","placeholder","TronMax_DailyDivs","TronMax_AccountDetails","Footer","App","initScreen","initTracker","options","renderToStaticMarkup","MuiThemeProvider_default","Common_GameAppBar","Common_RoutingScreen","Common_Footer","Common_GameSnackbar","Boolean","hostname","match","ReactDOM","render","es","src_components_App","document","getElementById","navigator","serviceWorker","then","registration","unregister"],"mappings":"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","file":"static/js/main.9c64d128.chunk.js","sourcesContent":["import $ from 'jquery';\n\n$(function() {\n  function walk() {\n    var left = $('img.walk').offset();\n    $('img.walk').css('left', left);\n    $('img.walk').animate(\n      {\n        left: '+=' + walkDistance(),\n      },\n      7000,\n      () => {\n        // Animation complete.\n        $('img.walk').addClass('flip');\n        $('img.walk').animate(\n          {\n            left: '+=0',\n          },\n          2000,\n          () => {\n            $('img.walk').animate(\n              {\n                left: '-=' + walkDistance(),\n              },\n              7000,\n              () => {\n                $('img.walk').removeClass('flip');\n                walk();\n              }\n            );\n          }\n        );\n      }\n    );\n  }\n\n  function walkDistance() {\n    var width = $(window).width();\n    if (width <= 480) {\n      return '50%';\n    } else if (width <= 768) {\n      return '45%';\n    } else if (width <= 1200) {\n      return '35%';\n    }\n    return '30%';\n  }\n\n  function resize() {\n    var height = $('.mine').height();\n    if (height < 873) {\n      var ratio = height / 873;\n      $('.walk').width(130 * ratio);\n      $('.walk').height(121 * ratio);\n      $('.walk').show(() => {\n        walk();\n      });\n    }\n  }\n\n  resize();\n});\n","import uuid from 'uuid/v4';\n\nconst SET_SCREEN = 'SET_SCREEN';\n\nconst SCREEN_VAULT = 'SCREEN_VAULT';\nconst SCREEN_MAX = 'SCREEN_MAX';\nconst SCREEN_ACCOUNT_DETAILS = 'SCREEN_ACCOUNT_DETAILS';\nconst RELOAD_ACCOUNT = 'RELOAD_ACCOUNT';\n\nexport {\n  SET_SCREEN,\n  SCREEN_VAULT,\n  SCREEN_MAX,\n  SCREEN_ACCOUNT_DETAILS,\n  RELOAD_ACCOUNT,\n};\n\nexport const setScreen = screen => ({\n  type: SET_SCREEN,\n  payload: {\n    screen,\n  },\n});\n\nexport const reloadAccount = () => ({\n  type: RELOAD_ACCOUNT,\n  payload: {\n    reloadAccountNonce: uuid(),\n  },\n});\n","import { createMuiTheme } from '@material-ui/core';\n\nexport default createMuiTheme({\n  typography: {\n    useNextVariants: true,\n  },\n  palette: {\n    primary: {\n      light: '#12161c',\n      main: '#12161c',\n      dark: '#12161c',\n      contrastText: '#1DA1F2',\n    },\n    secondary: {\n      light: '#a3eeff',\n      main: '#a3eeff',\n      dark: '#a3eeff',\n      contrastText: '#ffffff',\n    },\n    third: {\n      light: '#7ce27c',\n      main: '#7ce27c',\n      dark: '#7ce27c',\n      contrastText: '#ffffff',\n    },\n    action: {\n      light: '#0000a5',\n      main: '#0000a5',\n      dark: '#0000a5',\n      contrastText: '#ffffff',\n    },\n    important: {\n      light: '#cc00cc',\n      main: '#cc00cc',\n      dark: '#cc00cc',\n      contrastText: '#ffffff',\n    },\n    warning: {\n      light: '#c04a42',\n      main: '#c04a42',\n      dark: '#42BEC0',\n      contrastText: '#169496',\n    },\n    slider: { trackSize: 50, handleSize: 50 },\n  },\n});\n","import React from 'react';\n\nimport Slide from '@material-ui/core/Slide';\n\nconst Transition = props => <Slide direction=\"up\" {...props} />;\nexport default Transition;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Toolbar from '@material-ui/core/Toolbar/Toolbar';\nimport IconButton from '@material-ui/core/IconButton/IconButton';\nimport AppBar from '@material-ui/core/AppBar/AppBar';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport Drawer from '@material-ui/core/Drawer/Drawer';\nimport Divider from '@material-ui/core/Divider/Divider';\nimport List from '@material-ui/core/List/List';\nimport ListItem from '@material-ui/core/ListItem/ListItem';\nimport { withLocalize, Translate } from 'react-localize-redux';\nimport Dialog from '@material-ui/core/Dialog/Dialog';\nimport Transition from './Transition';\nimport Tooltip from '@material-ui/core/Tooltip/Tooltip';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography/Typography';\nimport Card from '@material-ui/core/Card/Card';\n\nimport Lockr from 'lockr';\n\nimport siteTranslations from '../../translations/translate.json';\n\nimport { SCREEN_VAULT, setScreen } from '../../actions/app';\n\nconst TT_URL = 'https://twitter.com/tronmineorg';\nconst TG_URL = 'https://t.me/tronmineorg';\n\nclass GameAppBar extends Component {\n  constructor(props) {\n    super(props);\n\n    const languages = [\n      { name: 'English', code: 'en' },\n      { name: '中文', code: 'cn' },\n    ];\n    this.state = {\n      languages,\n      mobileOpen: false,\n      anchorEl: null,\n      wechatOpen: false,\n    };\n\n    this.props.addTranslation(siteTranslations);\n  }\n\n  async componentDidMount() {\n    const activeLanguageCode = Lockr.get('language') || 'en';\n    this.props.setActiveLanguage(activeLanguageCode);\n  }\n\n  setActiveLanguage = code => {\n    this.props.setActiveLanguage(code);\n    Lockr.set('language', code);\n    this.setState({ mobileOpen: false });\n  };\n\n  getFlagUrl = code => {\n    return `images/misc/${code}.svg`;\n  };\n\n  getLogoImage = () => {\n    return `images/misc/logo_white.png`;\n  };\n\n  navigateTo = screen => {\n    const { setScreen } = this.props;\n    this.setState({ mobileOpen: false });\n    setScreen(screen);\n  };\n\n  home = () => {\n    this.navigateTo(SCREEN_VAULT);\n  };\n  // GO LIVE\n  openTSC = () => {\n    window.open(\n      'https://tronscan.org/#/',\n      '_blank'\n    );\n  };\n\n  openTronScan = () => {\n    window.open(\n      'https://tronscan.org/#/',\n      '_blank'\n    );\n  };\n\n  handleDrawerToggle = () => {\n    this.setState(state => ({ mobileOpen: !state.mobileOpen }));\n  };\n\n  renderWechat() {\n    const { wechatOpen } = this.state;\n\n    return (\n      <Dialog\n        open={wechatOpen}\n        onClose={this.closeWechat}\n        TransitionComponent={Transition}\n      >\n        <AppBar position=\"static\" className=\"wechat-appbar\">\n          <Toolbar>\n            <Tooltip title=\"Close\">\n              <IconButton\n                color=\"inherit\"\n                onClick={this.closeWechat}\n                aria-label=\"Close\"\n              >\n                <CloseIcon />\n              </IconButton>\n            </Tooltip>\n            <Typography variant=\"h6\" color=\"inherit\">\n              <Translate id=\"max.joinWechat\" />\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <div>\n          <Card className=\"card\">\n            <img\n              className=\"wechat-group\"\n              src=\"../images/social/wechat-group.png\"\n              alt=\"Wechat group\"\n            />\n          </Card>\n        </div>\n      </Dialog>\n    );\n  }\n\n  openWechat = () => {\n    this.setState({ wechatOpen: true });\n  };\n\n  closeWechat = () => {\n    this.setState({ wechatOpen: false });\n  };\n\n  renderDesktop() {\n    const { languages } = this.state;\n    return (\n      <div className=\"tool-bar desktop-app-bar\">\n        <div className=\"logo-container\">\n          <IconButton\n            color=\"inherit\"\n            aria-label=\"logo\"\n            disableRipple={true}\n            onClick={this.home}\n          >\n            <img src={this.getLogoImage()} className=\"logo\" alt=\"TrxMining\" />\n          </IconButton>\n        </div>\n\n        <div>\n         \n\n          {languages.map(lang => (\n            <IconButton\n              id={lang.code}\n              key={lang.code}\n              color=\"inherit\"\n              disableRipple={true}\n              onClick={() => this.setActiveLanguage(lang.code)}\n            >\n              <img\n                src={this.getFlagUrl(lang.code)}\n                className=\"image-flag\"\n                alt=\"Telegram\"\n              />\n            </IconButton>\n          ))}\n\n          <span className=\"social\">\n            <IconButton\n              className=\"social-button\"\n              href={TT_URL}\n              disableRipple={true}\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              <img\n                src=\"images/social/twitter.png\"\n                className=\"image-flag\"\n                alt=\"Twitter\"\n              />\n            </IconButton>\n          </span>\n          <span className=\"social\">\n            <IconButton\n              className=\"social-button\"\n              href={TG_URL}\n              disableRipple={true}\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n            >\n              <img\n                src=\"images/social/telegram.png\"\n                className=\"image-flag\"\n                alt=\"Telegram\"\n              />\n            </IconButton>\n          </span>\n        </div>\n      </div>\n    );\n  }\n\n  renderMobile() {\n    const { languages } = this.state;\n    return (\n      <div className=\"tool-bar mobile-app-bar\">\n        <IconButton\n          color=\"inherit\"\n          aria-label=\"Open drawer\"\n          disableRipple={true}\n          onClick={this.handleDrawerToggle}\n        >\n          <MenuIcon />\n        </IconButton>\n        <div className=\"logo-container\">\n          <IconButton\n            color=\"inherit\"\n            disableRipple={true}\n            aria-label={<Translate id=\"max.trxmining\" />}\n            onClick={this.home}\n          >\n            <span className=\"gold footitle\">\n              <Translate id=\"max.trxmining\" />\n            </span>\n          </IconButton>\n        </div>\n        <div className=\"mobile-app-bar-right\" />\n        <Drawer\n          container={this.props.container}\n          variant=\"temporary\"\n          anchor=\"left\"\n          open={this.state.mobileOpen}\n          onClose={this.handleDrawerToggle}\n          className=\"drawer\"\n        >\n          <div className=\"drawer-menu\">\n            <List>\n              \n              <ListItem\n                button\n                key=\"home\"\n                className=\"drawer-item\"\n                onClick={this.home}\n              >\n                <span className=\"gold\">\n                  <Translate id=\"max.trxmining\" />\n                </span>\n              </ListItem>\n              <Divider />\n              <ListItem button key=\"github\" className=\"drawer-item\">\n                {languages.map(lang => (\n                  <ListItem\n                    button\n                    key={lang.code}\n                    className=\"drawer-item\"\n                    disableRipple={true}\n                    onClick={() => this.setActiveLanguage(lang.code)}\n                  >\n                    <img\n                      src={this.getFlagUrl(lang.code)}\n                      className=\"image-flag\"\n                      alt=\"Telegram\"\n                    />\n                  </ListItem>\n                ))}\n                <span className=\"social\">\n                  <IconButton\n                    disableRipple={true}\n                    className=\"social-button\"\n                    href={TT_URL}\n                    rel=\"noopener noreferrer\"\n                    target=\"_blank\"\n                  >\n                    <img\n                      src=\"images/social/twitter.png\"\n                      className=\"image-flag\"\n                      alt=\"Twitter\"\n                    />\n                  </IconButton>\n                </span>\n                <span className=\"social\">\n                  <IconButton\n                    className=\"social-button\"\n                    href={TG_URL}\n                    rel=\"noopener noreferrer\"\n                    target=\"_blank\"\n                  >\n                    <img\n                      src=\"images/social/telegram.png\"\n                      className=\"image-flag\"\n                      alt=\"Telegram\"\n                    />\n                  </IconButton>\n                </span>\n              </ListItem>\n              <Divider />\n            </List>\n          </div>\n        </Drawer>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <AppBar position=\"sticky\">\n        <Toolbar>\n          {this.renderDesktop()}\n          {this.renderMobile()}\n        </Toolbar>\n      </AppBar>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  setScreen,\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(withLocalize(GameAppBar));\n","export const RESET_STATE = 'RESET_STATE';\n","import { RESET_STATE } from './constants';\n\nexport const SHOW_SNACKBAR = 'SHOW_SNACKBAR';\nexport const HIDE_SNACKBAR = 'HIDE_SNACKBAR';\n\nexport const showSnackbar = (message, variant, duration) => ({\n  type: SHOW_SNACKBAR,\n  payload: {\n    snackbarOpen: true,\n    snackbarMessage: message,\n    snackbarVariant: variant,\n    autoHideDuration: duration,\n  },\n});\n\nexport const hideSnackbar = () => ({\n  type: HIDE_SNACKBAR,\n  payload: {\n    snackbarOpen: false,\n    snackbarMessage: '',\n  },\n});\n\nexport const resetSnackbar = () => ({\n  type: RESET_STATE,\n});\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { withLocalize, Translate } from 'react-localize-redux';\n\nimport classNames from 'classnames';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport InfoIcon from '@material-ui/icons/Info';\nimport CloseIcon from '@material-ui/icons/Close';\nimport IconButton from '@material-ui/core/IconButton';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport withStyles from '@material-ui/core/styles/withStyles';\nimport Snackbar from '@material-ui/core/Snackbar';\n\nimport { hideSnackbar } from '../../actions/snackbar';\n\nexport const SNACKBAR_SUCCESS = 'success';\nexport const SNACKBAR_WARNING = 'warning';\nexport const SNACKBAR_ERROR = 'error';\nexport const SNACKBAR_INFO = 'info';\n\nconst variantIcon = {\n  success: CheckCircleIcon,\n  warning: WarningIcon,\n  error: ErrorIcon,\n  info: InfoIcon,\n};\n\nconst styles = theme => ({\n  success: {\n    backgroundColor: '#0000a5',\n  },\n  error: {\n    backgroundColor: '#cc0040',\n  },\n  info: {\n    backgroundColor: '#2993c4',\n  },\n  warning: {\n    backgroundColor: '#c04a42',\n  },\n  icon: {\n    fontSize: 20,\n  },\n  iconVariant: {\n    opacity: 0.9,\n    marginRight: theme.spacing.unit,\n  },\n  message: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n});\n\nfunction MySnackbarContent(props) {\n  const { classes, className, message, onClose, variant, ...other } = props;\n  const Icon = variantIcon[variant];\n\n  return (\n    <SnackbarContent\n      className={classNames(classes[variant], className)}\n      message={\n        <span id=\"client-snackbar\" className={classes.message}>\n          <Icon className={classNames(classes.icon, classes.iconVariant)} />\n          {message}\n        </span>\n      }\n      action={[\n        <IconButton\n          key=\"close\"\n          aria-label=\"Close\"\n          color=\"inherit\"\n          className={classes.close}\n          onClick={onClose}\n        >\n          <CloseIcon className={classes.icon} />\n        </IconButton>,\n      ]}\n      {...other}\n    />\n  );\n}\n\nconst MySnackbarContentWrapper = withStyles(styles)(MySnackbarContent);\n\nconst GameSnackbar = ({\n  open,\n  message,\n  snackbarVariant,\n  autoHideDuration,\n  hideSnackbar,\n}) => (\n  <Snackbar\n    anchorOrigin={{\n      vertical: 'bottom',\n      horizontal: 'center',\n    }}\n    open={open}\n    autoHideDuration={autoHideDuration}\n    onClose={hideSnackbar}\n  >\n    <MySnackbarContentWrapper\n      variant={snackbarVariant}\n      message={\n        message ? (\n          message.indexOf('message.') === 0 ? (\n            <span>\n              <Translate id={message} />\n            </span>\n          ) : (\n            message\n          )\n        ) : (\n          ''\n        )\n      }\n      onClose={hideSnackbar}\n    />\n  </Snackbar>\n);\n\nconst mapStateToProps = state => ({\n  open: state.snackbar.snackbarOpen,\n  message: state.snackbar.snackbarMessage,\n  snackbarVariant: state.snackbar.snackbarVariant || SNACKBAR_INFO,\n  autoHideDuration: state.snackbar.autoHideDuration || 3000,\n});\n\nconst mapDispatchToProps = {\n  hideSnackbar,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withLocalize(GameSnackbar));\n","export const TRON_WEB_STATE_NOT_INSTALLED = 'TRON_WEB_STATE_NOT_INSTALLED';\nexport const TRON_WEB_STATE_LOCKED = 'TRON_WEB_STATE_LOCKED';\nexport const TRON_WEB_STATE_UNLOCKED = 'TRON_WEB_STATE_UNLOCKED';\nexport const TRON_WEB_STATE_NOT_MAINNET = 'TRON_WEB_STATE_NOT_MAINNET';\n\nexport const FOUNDATION_ADDRESS = 'T9yD14Nj9j7xAB4dbGeiX9h8unkKHxuWwb';\nexport const FOUNDATION_CODE = 1000;\n\nexport const injectTronWeb = async defaultTronWeb => {\n  return new Promise(resolve => {\n    let tronWebState = TRON_WEB_STATE_NOT_INSTALLED;\n\n    // Try to inject it\n    let tries = 0;\n    const timer = setInterval(() => {\n      if (tries >= 10) {\n        if (!window.tronWeb) {\n          window.tronWeb = defaultTronWeb;\n        }\n        clearInterval(timer);\n        return resolve(tronWebState);\n      }\n\n      if (!!window.tronWeb && window.tronWeb !== defaultTronWeb) {\n        tronWebState = TRON_WEB_STATE_LOCKED;\n\n        if (window.tronWeb.ready) {\n          tronWebState = TRON_WEB_STATE_UNLOCKED;\n\n          // Already have it\n          clearInterval(timer);\n          return resolve(tronWebState);\n        }\n      }\n\n      tries++;\n    }, 100);\n  });\n};\n\nexport const initContract = async (\n  tronWebState,\n  defaultTronWeb,\n  contractAddress\n) => {\n  let contract;\n  try {\n    if (tronWebState !== TRON_WEB_STATE_LOCKED) {\n      contract = await window.tronWeb.contract().at(contractAddress);\n    } else {\n      contract = await defaultTronWeb.contract().at(contractAddress);\n    }\n  } catch (e) {\n    console.error(e);\n    return null;\n  }\n\n  return contract;\n};\n\nexport const trxToSun = trx => {\n  return trx * 1e6;\n};\n\nexport const sunToTrx = sun => {\n  if (isNaN(sun)) {\n    return '';\n  }\n  return sun / 1e6;\n};\n\nexport const weiToToken = wei => {\n  if (isNaN(wei)) {\n    return '';\n  }\n  return wei / 1e18;\n};\n\nexport const tokenToWei = token => {\n  return token * 1e18;\n};\n\nexport const isValidCode = code => {\n  const n = Math.floor(Number(code));\n  return n !== Infinity && String(n) === code && n >= FOUNDATION_CODE;\n};\n\nexport const getDateTimeFromUnix = unix => {\n  // Create a new JavaScript Date object based on the timestamp\n  // multiplied by 1000 so that the argument is in milliseconds, not seconds.\n  var date = new Date(unix * 1000);\n  var d = new Date(date),\n    month = '' + (d.getMonth() + 1),\n    day = '' + d.getDate(),\n    year = d.getFullYear();\n\n  if (month.length < 2) month = '0' + month;\n  if (day.length < 2) day = '0' + day;\n\n  return [year, month, day].join('-');\n};\n\nexport const getDateTimeLongFromUnix = unix => {\n  // Create a new JavaScript Date object based on the timestamp\n  // multiplied by 1000 so that the argument is in milliseconds, not seconds.\n  if (unix > 0) {\n    let date = new Date(unix * 1000);\n    let d = new Date(date),\n      month = '' + (d.getMonth() + 1),\n      day = '' + d.getDate(),\n      year = d.getFullYear(),\n      hour = '' + d.getHours(),\n      minute = '' + d.getMinutes();\n\n    if (month.length < 2) month = '0' + month;\n    if (day.length < 2) day = '0' + day;\n\n    let p1 = [year, month, day].join('-');\n    let p2 = [hour, minute].join(':');\n\n    return [p1, p2].join(' ');\n  } else {\n    return null;\n  }\n};\n","import { RESET_STATE } from '../actions/constants';\nimport { SET_SCREEN, SCREEN_VAULT, RELOAD_ACCOUNT } from '../actions/app';\n\nconst initialState = {\n  screen: SCREEN_VAULT,\n};\n\nexport function appReducer(state = initialState, action) {\n  switch (action.type) {\n    case SET_SCREEN:\n    case RELOAD_ACCOUNT: {\n      return {\n        ...state,\n        ...action.payload,\n      };\n    }\n    case RESET_STATE:\n      return initialState;\n    default:\n      return state;\n  }\n}\n","import { RESET_STATE } from '../actions/constants';\nimport { HIDE_SNACKBAR, SHOW_SNACKBAR } from '../actions/snackbar';\n\nconst initialState = {\n  snackbarOpen: false,\n  snackbarMessage: '',\n};\n\nexport function snackbarReducer(state = initialState, action) {\n  switch (action.type) {\n    case SHOW_SNACKBAR:\n    case HIDE_SNACKBAR: {\n      return {\n        ...state,\n        ...action.payload,\n      };\n    }\n    case RESET_STATE:\n      return initialState;\n    default:\n      return state;\n  }\n}\n","import { appReducer } from './app';\nimport { snackbarReducer } from './snackbar';\n\nexport default {\n  app: appReducer,\n  snackbar: snackbarReducer,\n};\n","import TronWeb from 'tronweb';\nimport BigNumber from 'bignumber.js';\nimport store from '../store';\nimport { showSnackbar } from '../actions/snackbar';\nimport { reloadAccount } from '../actions/app';\nimport {\n  SNACKBAR_ERROR,\n  SNACKBAR_INFO,\n} from '../components/Common/GameSnackbar';\n\nimport {\n  FOUNDATION_ADDRESS,\n  initContract,\n  injectTronWeb,\n  sunToTrx,\n  TRON_WEB_STATE_LOCKED,\n  TRON_WEB_STATE_NOT_INSTALLED,\n  TRON_WEB_STATE_NOT_MAINNET,\n  trxToSun,\n  getDateTimeLongFromUnix,\n} from './tronCommon';\n\nimport { toTruncateDown } from './math';\n\nconst gasLimit = 50 * 1000000; // 50 trx\n\n// MAINNET GO LIVE\nconst CONTRACT_ADDRESS = '410a7e3d6ee8eee0c347b948459d45fc42a234a1ea';\nconst TRONGRID_API = 'https://api.trongrid.io';\n\nconst initDefaultTronWeb = () => {\n  const defaultTronWeb = new TronWeb(TRONGRID_API, TRONGRID_API, TRONGRID_API);\n\n  // Set default address (foundation address) used for contract calls\n  // Directly overwrites the address object as TronLink disabled the\n  // function call\n  defaultTronWeb.defaultAddress = {\n    hex: defaultTronWeb.address.toHex(FOUNDATION_ADDRESS),\n    base58: FOUNDATION_ADDRESS,\n  };\n\n  return defaultTronWeb;\n};\n\nexport const defaultTronWeb = initDefaultTronWeb();\n\nlet currentAddress;\nlet contract;\nlet tronWebState;\nconst monitorAddressChanged = () => {\n  window.tronWeb.on('addressChanged', async address => {\n    if (currentAddress !== address.base58) {\n      const needsToNotify = !!currentAddress;\n      currentAddress = address.base58;\n\n      tronWebState = await injectTronWeb(defaultTronWeb);\n      contract = await initContract(\n        tronWebState,\n        defaultTronWeb,\n        CONTRACT_ADDRESS\n      );\n      if (needsToNotify) {\n        store.dispatch(showSnackbar('message.addressChanged', SNACKBAR_INFO));\n        store.dispatch(reloadAccount());\n      }\n    }\n  });\n};\n\nexport default {\n  async initTronWeb() {\n    tronWebState = await injectTronWeb(defaultTronWeb);\n    contract = await initContract(\n      tronWebState,\n      defaultTronWeb,\n      CONTRACT_ADDRESS\n    );\n    if (!contract) {\n      tronWebState = TRON_WEB_STATE_NOT_MAINNET;\n      store.dispatch(\n        showSnackbar('message.needToChangeNetwork', SNACKBAR_ERROR)\n      );\n    }\n\n    monitorAddressChanged();\n\n    if (tronWebState === TRON_WEB_STATE_NOT_INSTALLED) {\n      store.dispatch(showSnackbar('message.requireInstall', SNACKBAR_INFO));\n    } else if (tronWebState === TRON_WEB_STATE_LOCKED) {\n      store.dispatch(showSnackbar('message.requireLogin', SNACKBAR_INFO));\n    }\n    return tronWebState;\n  },\n\n  getCurrentAddress() {\n    return window.tronWeb.defaultAddress.base58;\n  },\n\n  // Main functions\n  async currentAddressBalance() {\n    if (tronWebState === TRON_WEB_STATE_LOCKED) {\n      return 0;\n    }\n    const balance = await window.tronWeb.trx.getBalance();\n    return balance;\n  },\n\n  async getBalance() {\n    const balance = await contract.getBalance().call();\n    return sunToTrx(new BigNumber(balance).toNumber());\n  },\n\n  async getPlayerCount() {\n    const playerCode = await contract.getLatestReferrerCode().call();\n\n    const latestCode = playerCode ? new BigNumber(playerCode).toNumber() : 0;\n    let playerCount = 0;\n    if (latestCode > 1000) {\n      playerCount = latestCode - 1000;\n    }\n\n    return playerCount;\n  },\n\n  async getDivsAllData() {\n    const currentAddress = this.getCurrentAddress();\n    if (!currentAddress || currentAddress === FOUNDATION_ADDRESS) {\n      return {\n        withdrawable: 0,\n        investment: 0,\n        referral: 0,\n      };\n    }\n\n    const data = {};\n    try {\n      const playerUID = await contract.getUIDByAddress(currentAddress).call();\n      const playerInfo = await contract.getInvestorInfoByUID(playerUID).call();\n\n      data.playerCode = new BigNumber(playerUID).toNumber();\n      data.referrerEarnings = playerInfo.referrerEarnings\n        ? sunToTrx(new BigNumber(playerInfo.referrerEarnings).toNumber())\n        : 0;\n      data.availableReferrerEarnings = playerInfo.availableReferrerEarnings\n        ? sunToTrx(\n            new BigNumber(playerInfo.availableReferrerEarnings).toNumber()\n          )\n        : 0;\n      data.referrerCode = playerInfo.referrer\n        ? new BigNumber(playerInfo.referrer).toNumber()\n        : 0;\n      data.level1RefCount = playerInfo.level1RefCount\n        ? new BigNumber(playerInfo.level1RefCount).toNumber()\n        : 0;\n      data.level2RefCount = playerInfo.level2RefCount\n        ? new BigNumber(playerInfo.level2RefCount).toNumber()\n        : 0;\n      data.level3RefCount = playerInfo.level3RefCount\n        ? new BigNumber(playerInfo.level3RefCount).toNumber()\n        : 0;\n      data.planCount = playerInfo.planCount\n        ? new BigNumber(playerInfo.planCount).toNumber()\n        : 0;\n\n      let currentDividends = 0;\n      if (playerInfo.currentDividends) {\n        if (playerInfo.currentDividends.length > 0) {\n          for (let i = 0; i < playerInfo.currentDividends.length; i++) {\n            currentDividends += sunToTrx(\n              new BigNumber(playerInfo.currentDividends[i]).toNumber()\n            );\n          }\n        }\n      }\n\n      let newDividends = 0;\n      if (playerInfo.newDividends) {\n        if (playerInfo.newDividends.length > 0) {\n          for (let j = 0; j < playerInfo.newDividends.length; j++) {\n            newDividends += sunToTrx(\n              new BigNumber(playerInfo.newDividends[j]).toNumber()\n            );\n          }\n        }\n      }\n\n      let hourlyProductions = 0;\n      if (playerInfo.hourlyProductions) {\n        if (playerInfo.hourlyProductions.length > 0) {\n          for (let k = 0; k < playerInfo.hourlyProductions.length; k++) {\n            hourlyProductions += sunToTrx(\n              new BigNumber(playerInfo.hourlyProductions[k]).toNumber()\n            );\n          }\n        }\n      }\n\n      data.currentDividends = toTruncateDown(\n        new BigNumber(currentDividends),\n        6\n      );\n      data.newDividends = toTruncateDown(new BigNumber(newDividends), 6);\n      data.hourlyProductions = toTruncateDown(\n        new BigNumber(hourlyProductions),\n        6\n      );\n      data.lastWithdrawalDate = getDateTimeLongFromUnix(\n        new BigNumber(playerInfo.lastWithdrawalDate).toNumber()\n      );\n\n      const hourlyProductionMin = await contract\n        .getHourlyProduction(trxToSun(newDividends), 1, true)\n        .call();\n      const hourlyProductionMax = await contract\n        .getHourlyProduction(trxToSun(newDividends), 60, true)\n        .call();\n\n      data.hourlyProductionMin = toTruncateDown(\n        new BigNumber(sunToTrx(new BigNumber(hourlyProductionMin).toNumber())),\n        6\n      );\n      data.hourlyProductionMax = toTruncateDown(\n        new BigNumber(sunToTrx(new BigNumber(hourlyProductionMax).toNumber())),\n        6\n      );\n\n      const playerInvestment = await contract\n        .getInvestmentPlanByUID(playerUID)\n        .call();\n\n      let playerInvestments = [];\n      let playerTotalInvestment = 0;\n      let investmentCount = 0;\n      if (playerInvestment) {\n        investmentCount = playerInvestment.investments.length;\n      }\n\n      for (let k = 0; k < investmentCount; k++) {\n        let inv = {};\n\n        const investmentDate = getDateTimeLongFromUnix(\n          new BigNumber(playerInvestment.investmentDates[k]).toNumber()\n        );\n        const investment = sunToTrx(\n          new BigNumber(playerInvestment.investments[k]).toNumber()\n        );\n        const currentDividend = toTruncateDown(\n          new BigNumber(\n            sunToTrx(\n              new BigNumber(playerInvestment.currentDividends[k]).toNumber()\n            )\n          ),\n          6\n        );\n\n        const currentInterest = new BigNumber(\n          playerInvestment.currentInterests[k]\n        ).toNumber();\n\n        const daysPassed = new BigNumber(\n          playerInvestment.daysPassed[k]\n        ).toNumber();\n        const isBoost = playerInvestment.isBoosts[k];\n\n        inv.investmentDate = investmentDate;\n        inv.investment = investment;\n        inv.currentDividend = currentDividend;\n        inv.currentInterest = currentInterest;\n        inv.isBoost = isBoost;\n        inv.daysPassed = daysPassed;\n        playerTotalInvestment = playerTotalInvestment + investment;\n\n        playerInvestments.push(inv);\n      }\n      data.playerTotalInvestment = toTruncateDown(\n        new BigNumber(playerTotalInvestment).toNumber(),\n        6\n      );\n\n      data.playerInvestments = playerInvestments;\n\n      return data;\n    } catch (e) {\n      console.error(e);\n      return data;\n    }\n  },\n\n  async currentDivsAddressBalance() {\n    const balance = await window.tronWeb.trx.getBalance();\n    return balance;\n  },\n\n  async invest(sendAmount, referrer) {\n    if (tronWebState === TRON_WEB_STATE_NOT_INSTALLED) {\n      store.dispatch(showSnackbar('message.requireInstall', SNACKBAR_ERROR));\n      return false;\n    } else if (tronWebState === TRON_WEB_STATE_LOCKED) {\n      store.dispatch(showSnackbar('message.requireLogin', SNACKBAR_ERROR));\n      return false;\n    }\n    const payAmount = trxToSun(sendAmount);\n\n    const data = await contract.invest(referrer).send({\n      feeLimit: gasLimit,\n      callValue: payAmount,\n      shouldPollResponse: false,\n    });\n    return data;\n  },\n\n  async boost() {\n    if (tronWebState === TRON_WEB_STATE_NOT_INSTALLED) {\n      store.dispatch(showSnackbar('message.requireInstall', SNACKBAR_ERROR));\n      return false;\n    } else if (tronWebState === TRON_WEB_STATE_LOCKED) {\n      store.dispatch(showSnackbar('message.requireLogin', SNACKBAR_ERROR));\n      return false;\n    }\n    const payAmount = 0;\n\n    const data = await contract.boost().send({\n      feeLimit: gasLimit,\n      callValue: payAmount,\n      shouldPollResponse: false,\n    });\n    return data;\n  },\n\n  async withdrawDivs() {\n    if (tronWebState === TRON_WEB_STATE_NOT_INSTALLED) {\n      store.dispatch(showSnackbar('message.requireInstall', SNACKBAR_ERROR));\n      return false;\n    } else if (tronWebState === TRON_WEB_STATE_LOCKED) {\n      store.dispatch(showSnackbar('message.requireLogin', SNACKBAR_ERROR));\n      return false;\n    }\n    const payAmount = 0;\n    const data = await contract.withdraw().send({\n      feeLimit: gasLimit,\n      callValue: payAmount,\n      shouldPollResponse: false,\n    });\n    return data;\n  },\n\n  async getLaunchDate() {\n    const data = {};\n    try {\n      const info = await contract.getLaunchDate().call();\n      data.launchDate = info.launchDate\n        ? new BigNumber(info.launchDate).toNumber()\n        : 0;\n      data.isOpen = info.isOpen;\n      return data;\n    } catch (e) {\n      console.error(e);\n      // error when calling `getAllData`\n      data.launchDate = null;\n      data.isOpen = false;\n      console.error(data);\n      return data;\n    }\n  },\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\n\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport IconButton from '@material-ui/core/IconButton';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\n\nimport * as moment from 'moment';\nimport Countdown from 'react-countdown-now';\n\nimport { Translate, withLocalize } from 'react-localize-redux';\nimport siteTranslations from '../../translations/translate.json';\nimport planData from '../../data/plans';\nimport ratesData from '../../data/rates';\nimport boostRatesData from '../../data/boostrates';\n\nimport { setScreen } from '../../actions/app';\n\nimport { showSnackbar } from '../../actions/snackbar';\n\nimport customTheme from '../Common/customTheme';\n\nimport {\n  sunToTrx,\n  TRON_WEB_STATE_NOT_MAINNET,\n  trxToSun,\n} from '../../utils/tronCommon';\n\nimport tronMain from '../../utils/tronMain';\n\nimport {\n  SNACKBAR_ERROR,\n  SNACKBAR_INFO,\n  SNACKBAR_WARNING,\n} from '../Common/GameSnackbar';\nimport Tracker from '../../utils/tracker';\nimport { parseReferralAddress } from '../../utils/parseQueryString';\n\nconst styles = () => ({\n  button: {\n    '&:hover': {\n      backgroundColor: 'transparent',\n    },\n  },\n});\n\nconst WEB_SITE_URL = 'https://tronmine.org';\n\nconst initialState = {\n  launchDate: null,\n  isOpen: true, // Already open\n  depositAmount: 100,\n  accountValidForReferral: false,\n  accountBalance: 'xxx',\n  contractBalance: 'xxx',\n  playerCount: 'xxx',\n  donationAmount: 1,\n  playerCode: 'xxx',\n  referrerEarnings: 'xxx',\n  availableReferrerEarnings: 'xxx',\n  referrerCode: 'xxx',\n  level1RefCount: 'xxx',\n  level2RefCount: 'xxx',\n  level3RefCount: 'xxx',\n  planCount: 'xxx',\n  currentDividends: 'xxx',\n  newDividends: 'xxx',\n  hourlyProductionMin: 'xxx',\n  hourlyProductionMax: 'xxx',\n  hourlyProductions: 'xxx',\n  playerTotalInvestment: 'xxx',\n  playerInvestments: [],\n};\n\nlet loadDataInterval;\nconst INTERVAL = 5000; // 5 sec\n\nconst MINIMUM_DEPOSIT_GAS_FEE = trxToSun(3); // 3 TRX for gas fee\nconst MINIMUM_WITHDRAW_GAS_FEE = trxToSun(1); // 1 TRX for gas fee\nconst MINIMUM_DEPOSIT = 1;\n\n// Renderer callback with condition\nconst renderer = ({ days, hours, minutes, seconds, completed }) => {\n  if (completed) {\n    // Start the game\n    window.location.reload();\n  } else {\n    // Render a countdown\n    return (\n      <div>\n        <div className=\"foo dark-black\">\n          <span className=\"gold\">{days}</span>{' '}\n          <span>\n            <Translate id=\"max.days\" />\n          </span>{' '}\n          <span className=\"gold\">{hours}</span>{' '}\n          <span>\n            <Translate id=\"max.hours\" />{' '}\n          </span>{' '}\n          <span className=\"gold\">{minutes}</span>{' '}\n          <span>\n            <Translate id=\"max.minutes\" />{' '}\n          </span>{' '}\n          <span className=\"gold\">{seconds}</span>{' '}\n          <span>\n            <Translate id=\"max.seconds\" />\n          </span>{' '}\n        </div>\n        <div className=\"duality dark-black\">\n          <p className=\"lead m-size\">\n            <Translate id=\"max.untillaunch\" />\n          </p>\n        </div>\n        <div>\n          <Button\n            className=\"gta-invest-button\"\n            variant=\"contained\"\n            disableRipple={true}\n            target=\"_blank\"\n            href=\"https://tronscan.org/#/contract/TJoaJw2hKS6MkPt7243UvJ5351bSeG1b7t/code\"\n          >\n            <Translate id=\"max.contractsourcecode\" />{' '}\n          </Button>\n        </div>\n      </div>\n    );\n  }\n};\n\nclass DailyDivs extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n    this.props.addTranslation(siteTranslations);\n  }\n\n  async componentDidMount() {\n    const referralAddress = parseReferralAddress();\n    this.setState({ referralAddress });\n\n    const tronWebState = await tronMain.initTronWeb();\n    if (tronWebState === TRON_WEB_STATE_NOT_MAINNET) {\n      return;\n    }\n\n    await this.loadData();\n    clearInterval(loadDataInterval);\n    loadDataInterval = setInterval(async () => {\n      try {\n        await this.loadData();\n      } catch (e) {\n        console.error(e);\n        clearInterval(loadDataInterval);\n      }\n    }, INTERVAL);\n\n    Tracker.pageview('/max');\n  }\n\n  componentWillUnmount() {\n    clearInterval(loadDataInterval);\n  }\n\n  async componentDidUpdate(prevProps) {\n    if (this.props.reloadAccountNonce !== prevProps.reloadAccountNonce) {\n      this.setState(initialState);\n      await this.loadData();\n    }\n  }\n\n  loadData = async () => {\n    await this.loadPlayerData();\n    await this.loadDivsData();\n  };\n\n  loadPlayerData = async () => {\n    // await this.getOpenInfo(); // Already open\n    await this.getPlayerData();\n  };\n\n  // Already open\n  // getOpenInfo = async () => {\n  //   const info = await tronMain.getLaunchDate();\n  //   const isOpen = info.isOpen;\n  //   this.setState({\n  //     isOpen,\n  //   });\n\n  //   const launchDate = info.launchDate\n  //     ? moment.unix(info.launchDate).utc()\n  //     : null;\n  //   if (launchDate) {\n  //     this.setState({\n  //       launchDate,\n  //     });\n  //   }\n  // };\n\n  loadDivsData = async () => {\n    const data = await tronMain.getDivsAllData();\n\n    const playerCode = data.playerCode;\n    const referrerEarnings = data.referrerEarnings;\n    const availableReferrerEarnings = data.availableReferrerEarnings;\n    const referrerCode = data.referrerCode;\n    const level1RefCount = data.level1RefCount;\n    const level2RefCount = data.level2RefCount;\n    const level3RefCount = data.level3RefCount;\n    const planCount = data.planCount;\n    const currentDividends = data.currentDividends;\n    const newDividends = data.newDividends;\n    const hourlyProductionMin = data.hourlyProductionMin;\n    const hourlyProductionMax = data.hourlyProductionMax;\n    const hourlyProductions = data.hourlyProductions;\n    const playerTotalInvestment = data.playerTotalInvestment;\n    const playerInvestments = data.playerInvestments;\n    const lastWithdrawalDate = data.lastWithdrawalDate;\n\n    const contractBalance = await tronMain.getBalance();\n    const playerCount = await tronMain.getPlayerCount();\n\n    this.setState({\n      contractBalance,\n      playerCount,\n      playerCode,\n      referrerEarnings,\n      availableReferrerEarnings,\n      referrerCode,\n      level1RefCount,\n      level2RefCount,\n      level3RefCount,\n      planCount,\n      currentDividends,\n      newDividends,\n      hourlyProductionMin,\n      hourlyProductionMax,\n      hourlyProductions,\n      playerTotalInvestment,\n      playerInvestments,\n      lastWithdrawalDate,\n      accountValidForReferral: playerTotalInvestment > 0,\n    });\n  };\n\n  getPlayerData = async () => {\n    const accountBalance = await tronMain.currentAddressBalance();\n    this.setState({\n      accountBalance,\n    });\n  };\n\n  isDepositDisabled = () => {\n    const { isOpen, newDividends, investmentDivs } = this.state;\n    return !isOpen || (newDividends === 0 && investmentDivs > 0);\n  };\n\n  formatAmount = amount => {\n    const formattedAmount = amount\n      .replace(/^0+(?!\\.|$)/, '')\n      .replace(/[^0-9 .]+/g, '')\n      .replace(/(\\d)(?=(\\d\\d\\d)+(?!\\d))/g, '$1');\n    if (formattedAmount.trim() === '') {\n      return '';\n    } else {\n      return formattedAmount;\n    }\n  };\n\n  getPlanInfo = planId => {\n    const plan = planData[planId];\n    return plan;\n  };\n\n  copyLink = () => {\n    const { showSnackbar } = this.props;\n    const { myReferralLink } = this.state;\n\n    showSnackbar('message.referralLinkCopied');\n    Tracker.event({\n      category: 'Mining',\n      action: 'Copy Link',\n      label: myReferralLink,\n    });\n  };\n\n  handleDepositAmountChange = async event => {\n    const formattedAmount = this.formatAmount(event.target.value);\n    this.setState({ depositAmount: formattedAmount });\n  };\n\n  deposit = async () => {\n    const { referralAddress, accountBalance } = this.state;\n    let { depositAmount } = this.state;\n    const { showSnackbar } = this.props;\n    Tracker.event({\n      category: 'Mining',\n      action: 'Deposit Fund',\n    });\n\n    if (depositAmount < MINIMUM_DEPOSIT) {\n      showSnackbar('message.depositNumberMustBePositive', SNACKBAR_WARNING);\n      return;\n    }\n\n    if (depositAmount > sunToTrx(accountBalance - MINIMUM_DEPOSIT_GAS_FEE)) {\n      // Set the `depositAmount`, otherwise, can't deposit\n      depositAmount = sunToTrx(accountBalance - MINIMUM_DEPOSIT_GAS_FEE);\n    }\n\n    if (depositAmount <= 0) {\n      showSnackbar('message.depositNeedsGasFee', SNACKBAR_WARNING);\n      return;\n    }\n\n    try {\n      const result = await tronMain.invest(depositAmount, referralAddress);\n      if (!result) {\n        return;\n      }\n      showSnackbar('message.depositSucceed', SNACKBAR_INFO);\n      await this.loadData();\n    } catch (e) {\n      console.error(e);\n      if (e === 'Confirmation declined by user') {\n        showSnackbar('message.cancelAction', SNACKBAR_INFO);\n      } else {\n        if (e.error) {\n          if (e.error === 'CONTRACT_VALIDATE_ERROR') {\n            if (e.message.indexOf('balance is not sufficient') > 0) {\n              showSnackbar('message.notEnoughFund', SNACKBAR_ERROR);\n            }\n          } else if (e.error === 'Cannot find result in solidity node') {\n            // showSnackbar('message.timout', SNACKBAR_ERROR);\n            showSnackbar('message.depositSucceed', SNACKBAR_INFO);\n          } else {\n            showSnackbar(e.error, SNACKBAR_ERROR);\n          }\n        }\n      }\n    }\n  };\n\n  withdraw = async () => {\n    const { showSnackbar } = this.props;\n    const { newDividends, accountBalance } = this.state;\n    Tracker.event({\n      category: 'Mining',\n      action: 'Withdraw Fund',\n    });\n\n    if (newDividends <= 0) {\n      showSnackbar(\n        'message.withdrawableNumberMustBePositive',\n        SNACKBAR_WARNING\n      );\n      return;\n    }\n\n    if (accountBalance < MINIMUM_WITHDRAW_GAS_FEE) {\n      showSnackbar('message.withdrawNeedsGasFee', SNACKBAR_WARNING);\n      return;\n    }\n\n    try {\n      const result = await tronMain.withdrawDivs();\n      if (!result) {\n        return;\n      }\n      showSnackbar('message.withdrawSucceed', SNACKBAR_INFO);\n      await this.loadData();\n    } catch (e) {\n      console.error(e);\n      if (e === 'Confirmation declined by user') {\n        showSnackbar('message.cancelAction', SNACKBAR_INFO);\n      } else {\n        if (e.error) {\n          if (e.error === 'CONTRACT_VALIDATE_ERROR') {\n            if (e.message.indexOf('balance is not sufficient') > 0) {\n              showSnackbar('message.notEnoughFund', SNACKBAR_ERROR);\n            }\n          } else if (e.error === 'Cannot find result in solidity node') {\n            showSnackbar('message.withdrawSucceed', SNACKBAR_INFO);\n          } else {\n            showSnackbar(e.error, SNACKBAR_ERROR);\n          }\n        }\n      }\n    }\n  };\n  boost = async () => {\n    const { showSnackbar } = this.props;\n    const { newDividends } = this.state;\n    Tracker.event({\n      category: 'Mining',\n      action: 'Deposit Fund',\n    });\n\n    if (newDividends < MINIMUM_DEPOSIT) {\n      showSnackbar('message.boostmentNumberMustBePositive', SNACKBAR_WARNING);\n      return;\n    }\n\n    try {\n      const result = await tronMain.boost();\n      if (!result) {\n        return;\n      }\n      showSnackbar('message.depositSucceed', SNACKBAR_INFO);\n      await this.loadData();\n    } catch (e) {\n      console.error(e);\n      if (e === 'Confirmation declined by user') {\n        showSnackbar('message.cancelAction', SNACKBAR_INFO);\n      } else {\n        if (e.error) {\n          if (e.error === 'CONTRACT_VALIDATE_ERROR') {\n            if (e.message.indexOf('balance is not sufficient') > 0) {\n              showSnackbar('message.notEnoughFund', SNACKBAR_ERROR);\n            }\n          } else if (e.error === 'Cannot find result in solidity node') {\n            // showSnackbar('message.timout', SNACKBAR_ERROR);\n            showSnackbar('message.depositSucceed', SNACKBAR_INFO);\n          } else {\n            showSnackbar(e.error, SNACKBAR_ERROR);\n          }\n        }\n      }\n    }\n  };\n\n  renderCountdown() {\n    const { launchDate } = this.state;\n    return (\n      !!launchDate && (\n        <h1 className=\"display-4\">\n          <Countdown date={launchDate.toDate()} renderer={renderer} />\n        </h1>\n      )\n    );\n  }\n\n  render() {\n    const {\n      depositAmount,\n      accountValidForReferral,\n      playerCode,\n      contractBalance,\n      referrerEarnings,\n      availableReferrerEarnings,\n      level1RefCount,\n      level2RefCount,\n      level3RefCount,\n      currentDividends,\n      newDividends,\n      hourlyProductionMin,\n      hourlyProductionMax,\n      hourlyProductions,\n      accountBalance,\n      playerTotalInvestment,\n      playerInvestments,\n      lastWithdrawalDate,\n      isOpen,\n    } = this.state;\n\n    const { classes } = this.props;\n    const myReferralLink =\n      window.tronWeb && playerCode ? `${WEB_SITE_URL}?ref=${playerCode}` : ``;\n\n    let investId = 0;\n    let rateId = 0;\n\n    return (\n      <MuiThemeProvider theme={customTheme}>\n        <div className=\"aboveground\">\n          <Grid container spacing={24} className=\"hero-card\">\n            <Grid item xs={12}>\n              <div className=\"jumbotron\">\n                <Grid container spacing={24}>\n                  <Grid item xs={12}>\n                    <div className=\"xxl-size foo\">\n                      <Translate id=\"max.maintitle\" />\n                    </div>\n                    <div className=\"l-size gold middle-children foo\">\n                      <img\n                        src=\"images/misc/gold6.png\"\n                        className=\"image-small\"\n                        alt=\"tron\"\n                      />\n                      <Translate id=\"max.subtitle1\" />\n                    </div>\n                    <div className=\"m-t-50 m-size\">\n                      <Translate id=\"max.subtitle2\" />\n                    </div>\n                  </Grid>\n                  <Grid item xs={12}>\n                    {!isOpen && this.renderCountdown()}\n                  </Grid>\n                  {isOpen && (\n                    <Grid item xs={12}>\n                      <div>\n                        <Button\n                          className=\"gta-button\"\n                          variant=\"contained\"\n                          disableRipple={true}\n                          href=\"#section_invest\"\n                        >\n                          <Translate id=\"max.play\" />{' '}\n                        </Button>\n                      </div>\n                      <div className=\"space\" />\n                      <div>\n                        <Button\n                          className=\"gta-invest-button\"\n                          variant=\"contained\"\n                          disableRipple={true}\n                          target=\"_blank\"\n                          href=\"https://tronscan.org/#/contract/TJoaJw2hKS6MkPt7243UvJ5351bSeG1b7t/code\"\n                        >\n                          <Translate id=\"max.contractsourcecode\" />{' '}\n                        </Button>\n                      </div>\n                    </Grid>\n                  )}\n                </Grid>\n              </div>\n            </Grid>\n          </Grid>\n          <div className=\"sky\" />\n          <div className=\"land m-t-50\" />\n          <div className=\"mine m-t-50\" />\n          <img\n            src=\"images/mining/walk_crop.gif\"\n            className=\"walk img-responsive\"\n            alt=\"walk\"\n          />\n          <div className=\"overlay m-t-50\" />\n          <div className=\"foreground m-t-50\" />\n        </div>\n        <div className=\"ground\" />\n\n        <div className=\"ratesground\">\n          <div className=\"title-description\">\n\n            <div className=\"m-size duality gold\">\n              <Translate id=\"max.miningpowerrange\" />{' '}\n              <span className=\"l-size foo aqua\">0.1% ~ 3.6%</span>\n            </div>\n            <div className=\"m-size duality gold\">\n              <Translate id=\"max.miningpowerdesc2\" />\n            </div>\n            <div className=\"space\" />\n            <div>\n              <Button\n                className=\"gta-button\"\n                variant=\"contained\"\n                disableRipple={true}\n                href=\"#section_rates\"\n              >\n                <Translate id=\"max.more\" />{' '}\n              </Button>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"belowground white\">\n          <div\n            id=\"mine_1\"\n            data-id=\"2\"\n            className=\"cell noblur responsive open wow fadeInUp\"\n          >\n            <div className=\"room\">\n              <div className=\"title foo\">\n                <div className=\"middle-children\">\n                  <img\n                    src=\"images/misc/gold1.png\"\n                    className=\"image-small\"\n                    alt=\"tron\"\n                  />\n                  <Translate id=\"max.contractbalance\" />\n                </div>\n                <div className=\"space\" />\n                <div className=\"count gold l-size\">\n                  {contractBalance && contractBalance.toLocaleString()}\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div\n            id=\"mine_2\"\n            data-id=\"2\"\n            className=\"cell noblur responsive open wow fadeInUp\"\n          >\n            <div className=\"room\">\n              <div className=\"title foo row\">\n                <Translate id=\"max.myinvestments\" /> TRX\n                <div className=\"count l-size red\">\n                  {playerTotalInvestment\n                    ? playerTotalInvestment.toLocaleString()\n                    : '0'}\n                </div>\n                <div className=\"space\" />\n                <Translate id=\"max.payout\" /> TRX\n                <div className=\"count l-size red\">\n                  {currentDividends ? currentDividends.toLocaleString() : '0'}\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <div\n            id=\"mine_3\"\n            data-id=\"2\"\n            className=\"cell noblur responsive open wow fadeInUp\"\n          >\n            <div className=\"room\">\n              <div className=\"title foo\">\n                <div className=\"middle-children\">\n                  <img\n                    src=\"images/misc/gold2.png\"\n                    className=\"image-small\"\n                    alt=\"tron\"\n                  />\n                  <Translate id=\"max.minedGold\" />\n                </div>\n                <div className=\"space\" />\n                <div className=\"count gold l-size\">\n                  {newDividends ? newDividends.toLocaleString() : '0'}\n                </div>\n              </div>\n              <div className=\"worker working miner_3\" />\n            </div>\n          </div>\n\n          <div\n            id=\"mine_4\"\n            data-id=\"2\"\n            className=\"cell noblur responsive open wow fadeInUp\"\n          >\n            <div className=\"room\">\n              <div className=\"title foo\">\n                <div className=\"middle-children\">\n                  <img\n                    src=\"images/misc/gold6.png\"\n                    className=\"image-small\"\n                    alt=\"tron\"\n                  />\n                  <Translate id=\"max.hourlyproduction\" />\n                </div>\n                <div className=\"space\" />\n                <div className=\"count gold l-size\">\n                  {hourlyProductions ? hourlyProductions.toLocaleString() : '0'}\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"roof\" />\n        <div className=\"cards\">\n          <div color=\"primary\" className=\"card home-card\">\n            <div className=\"container\">\n              <div className=\"space\" />\n              <Grid container spacing={24} className=\"component-card\">\n                <div className=\"space\" />\n                <div id=\"section_invest\" />\n                {planData &&\n                  planData.map(() => {\n                    const gridId = 'grid-0';\n                    const planInfo = this.getPlanInfo(0);\n                    const icon = 'images/misc/' + planInfo.icon + '.png';\n\n                    const amt = depositAmount;\n                    return (\n                      <Grid item xs={12} md={4} key={gridId}>\n                        <div className=\"card\">\n                          <div className=\"dd-card\">\n                            <Grid container spacing={0}>\n                              <Grid item xs={12}>\n                                <div className=\"race-placeholder deposit-card deposit-withdraw-card\">\n                                  <div className=\"my-account middle-children\">\n                                    <img\n                                      src={icon}\n                                      className=\"image-race-thumbmail\"\n                                      alt=\"tron\"\n                                    />\n                                    <div className=\"m-size dark middle-children\">\n                                      <img\n                                        src=\"images/misc/pick.png\"\n                                        className=\"image-small\"\n                                        alt=\"tron\"\n                                      />\n                                      <span className=\"my-account-title foo\">\n                                        {' '}\n                                        <Translate id=\"max.investToMine\" />\n                                      </span>\n                                    </div>\n                                  </div>\n                                  <div className=\"space\" />\n                                  <div className=\"space\" />\n                                  <div className=\"input-box\">\n                                    <TextField\n                                      label=\"\"\n                                      className=\"buy-token\"\n                                      autoComplete=\"off\"\n                                      value={amt}\n                                      onChange={this.handleDepositAmountChange}\n                                      InputProps={{\n                                        endAdornment: (\n                                          <img\n                                            src=\"images/misc/logo.svg\"\n                                            className=\"logo\"\n                                            alt=\"tron\"\n                                          />\n                                        ),\n                                      }}\n                                      margin=\"normal\"\n                                      variant=\"outlined\"\n                                    />\n                                  </div>\n                                  <div className=\"space\" />\n                                  <div className=\"s-size dark\">\n                                    <Translate id=\"max.investdesc\" />\n                                  </div>\n                                  <div className=\"space\" />\n                                  <Grid container spacing={24}>\n                                    <Grid item xs={12}>\n                                      <Button\n                                        className=\"gta-button\"\n                                        variant=\"contained\"\n                                        disableRipple={true}\n                                        disabled={this.isDepositDisabled()}\n                                        onClick={() => this.deposit()}\n                                      >\n                                        <Translate id=\"max.invest\" />\n                                      </Button>\n                                    </Grid>\n                                  </Grid>\n                                </div>\n                              </Grid>\n                            </Grid>\n                          </div>\n                        </div>\n                      </Grid>\n                    );\n                  })}\n                <Grid item xs={12} md={4}>\n                  <div className=\"card\">\n                    <div className=\"dd-card\">\n                      <Grid container spacing={0}>\n                        <Grid item xs={12}>\n                          <div className=\"race-placeholder deposit-card deposit-withdraw-card\">\n                            <div className=\"my-account middle-children\">\n                              <img\n                                src=\"images/misc/dwarf.png\"\n                                className=\"image-race-thumbmail\"\n                                alt=\"tron\"\n                              />\n                              <div className=\"m-size dark middle-children\">\n                                <img\n                                  src=\"images/misc/gold3.png\"\n                                  className=\"image-small\"\n                                  alt=\"tron\"\n                                />\n                                <span className=\"my-account-title foo\">\n                                  {' '}\n                                  <Translate id=\"max.boostGold\" />{' '}\n                                </span>\n                              </div>\n                            </div>\n                            <div className=\"s-size dark\">\n                              <Translate id=\"max.boostdesc\" />\n                            </div>\n                            <div className=\"s-size dark\">\n                              <Translate id=\"max.boostdesc2\" />\n                            </div>\n                            <div className=\"s-size dark\">\n                              <Translate id=\"max.boostdesc3\" />\n                            </div>\n                            <div className=\"count l-size gold  foo\">\n                              {hourlyProductionMin>0 &&\n                                hourlyProductionMin.toLocaleString()\n                              }{' ~ '}\n                              {hourlyProductionMax>0 &&\n                                hourlyProductionMax.toLocaleString()}\n                            </div>\n                            <div className=\"space\" />\n                            <div className=\"space\" />\n                            <Grid container spacing={24}>\n                              <Grid item xs={12}>\n                                <Button\n                                  className=\"gta-button\"\n                                  variant=\"contained\"\n                                  disableRipple={true}\n                                  disabled={this.isDepositDisabled()}\n                                  onClick={() => this.boost()}\n                                >\n                                  <Translate id=\"max.boost\" />\n                                </Button>\n                              </Grid>\n                            </Grid>\n                          </div>\n                        </Grid>\n                      </Grid>\n                    </div>\n                  </div>\n                </Grid>\n                <Grid item xs={12} md={4}>\n                  <div className=\"card\">\n                    <div className=\"dd-card\">\n                      <Grid container spacing={0}>\n                        <Grid item xs={12}>\n                          <div className=\"race-placeholder deposit-card deposit-withdraw-card\">\n                            <div className=\"my-account middle-children\">\n                              <img\n                                src=\"images/misc/goblin.png\"\n                                className=\"image-race-thumbmail\"\n                                alt=\"tron\"\n                              />\n                              <div className=\"m-size dark middle-children\">\n                                <img\n                                  src=\"images/misc/gold3.png\"\n                                  className=\"image-small\"\n                                  alt=\"tron\"\n                                />\n                                <span className=\"my-account-title foo\">\n                                  {' '}\n                                  <Translate id=\"max.sellGold\" />{' '}\n                                </span>\n                              </div>\n                            </div>\n                            <div className=\"count l-size gold foo\">\n                              {newDividends && newDividends.toLocaleString()}\n                            </div>\n\n                            <div className=\"space\" />\n                            <div className=\"s-size dark\">\n                              <Translate id=\"max.lastselldate\" />:{' '}\n                              {lastWithdrawalDate}\n                            </div>\n                            <div className=\"s-size red\">\n                              <Translate id=\"max.selldesc2\" />\n                            </div>\n\n                            <div className=\"space\" />\n\n                            <Grid container spacing={24}>\n                              <Grid item xs={12}>\n                                <Button\n                                  className=\"gta-button\"\n                                  variant=\"contained\"\n                                  disableRipple={true}\n                                  disabled={this.isDepositDisabled()}\n                                  onClick={() => this.withdraw()}\n                                >\n                                  <Translate id=\"max.sell\" />\n                                </Button>\n                              </Grid>\n                            </Grid>\n                          </div>\n                        </Grid>\n                      </Grid>\n                    </div>\n                  </div>\n                </Grid>\n              </Grid>\n\n              <div id=\"section_investments\" />\n              <Grid container spacing={0}>\n                <Grid item xs={12}>\n                  {playerInvestments &&\n                    playerInvestments.length > 0 && (\n                      <div className=\"race-placeholder  deposit-card deposit-withdraw-card\">\n                        <div className=\"space\" />\n                        <Grid container spacing={0}>\n                          <Grid item xs={12} className=\"investment-card\">\n                            {playerInvestments &&\n                              playerInvestments.map(playerInvestment => {\n                                investId++;\n                                const key =\n                                  'plan-investment-' +\n                                  playerInvestment.planId +\n                                  '-' +\n                                  investId;\n                                const investmentDate =\n                                  playerInvestment.investmentDate;\n                                const investment = playerInvestment.investment;\n                                const currentDividend =\n                                  playerInvestment.currentDividend;\n                                const currentInterest =\n                                  playerInvestment.currentInterest;\n                                const daysPassed =\n                                  playerInvestment.daysPassed + 1;\n                                const imgUrl = !playerInvestment.isBoost\n                                  ? 'images/misc/human.png'\n                                  : 'images/misc/dwarf.png';\n                                const investmentLabel = !playerInvestment.isBoost\n                                  ? 'max.investment'\n                                  : 'max.boost';\n\n                                return (\n                                  <Grid container spacing={24} key={key}>\n                                    <Grid\n                                      item\n                                      xs={12}\n                                      className=\"m-size align-left\"\n                                    >\n                                      <div className=\"middle-children foo\">\n                                        <img\n                                          src={imgUrl}\n                                          className=\"image-small\"\n                                          alt=\"tron\"\n                                        />\n                                        <div>\n                                          <span className=\"my-account-title\">\n                                            <Translate id=\"max.miningpower\" />{' '}\n                                          </span>\n                                          <span className=\"aqua\">\n                                            {currentInterest / 10}%\n                                          </span>\n                                        </div>\n                                      </div>\n                                    </Grid>\n                                    <Grid\n                                      item\n                                      xs={12}\n                                      md={3}\n                                      className=\"xm-size\"\n                                    >\n                                      <Translate id=\"max.startfrom\" />{' '}\n                                      <span className=\"aqua foo\">\n                                        {investmentDate}\n                                      </span>\n                                    </Grid>\n                                    <Grid\n                                      item\n                                      xs={12}\n                                      md={3}\n                                      className=\"xm-size\"\n                                    >\n                                      <Translate id={investmentLabel} />{' '}\n                                      <span className=\"red foo\">\n                                        {investment}\n                                      </span>{' '}\n                                      TRX\n                                    </Grid>\n                                    <Grid\n                                      item\n                                      xs={12}\n                                      md={3}\n                                      className=\"xm-size\"\n                                    >\n                                      <Translate id=\"max.payout\" />{' '}\n                                      <span className=\"red foo\">\n                                        {currentDividend}\n                                      </span>{' '}\n                                      TRX\n                                    </Grid>\n                                    <Grid\n                                      item\n                                      xs={12}\n                                      md={3}\n                                      className=\"xm-size\"\n                                    >\n                                      <span className=\"gold aqua\">\n                                        {daysPassed}\n                                      </span>{' '}\n                                      <Translate id=\"max.dayspassed\" />\n                                    </Grid>\n                                  </Grid>\n                                );\n                              })}\n                            <div className=\"space\" />\n                          </Grid>\n                        </Grid>\n                      </div>\n                    )}\n                </Grid>\n              </Grid>\n\n              <div id=\"section_referrals\" />\n              <div className=\"race-placeholder  deposit-card deposit-withdraw-card\">\n                <Grid container spacing={0}>\n                  <Grid item xs={12} md={6}>\n                    <Grid container spacing={24}>\n                      <Grid item xs={12} md={12}>\n                        <div className=\"middle-children\">\n                          <img\n                            src=\"images/misc/gold6.png\"\n                            className=\"image-small\"\n                            alt=\"tron\"\n                          />\n                          <span className=\"my-account-title foo\">\n                            <Translate id=\"max.availableReferralEarnings\" />\n                          </span>\n                        </div>\n                        <div className=\"foo\">\n                          <span className=\"gold balance-number\">\n                            {availableReferrerEarnings || 0}\n                          </span>\n                        </div>\n                      </Grid>\n                    </Grid>\n\n                    <Grid container spacing={0}>\n                      {accountValidForReferral ? (\n                        <Grid item xs={12}>\n                          <div className=\"input-box middle-children\">\n                            <TextField\n                              className=\"divs-referral-link-box\"\n                              value={myReferralLink}\n                              margin=\"normal\"\n                              color=\"secondary\"\n                              variant=\"outlined\"\n                            />\n                            <span className=\"s-size\">\n                              <CopyToClipboard\n                                text={myReferralLink}\n                                disableRipple={true}\n                                onCopy={() => {\n                                  this.copyLink();\n                                }}\n                              >\n                                <IconButton className={classes.button}>\n                                  <FileCopyIcon />\n                                </IconButton>\n                              </CopyToClipboard>\n                            </span>\n                          </div>\n                        </Grid>\n                      ) : accountBalance === 0 ? (\n                        <Grid item xs={12}>\n                          <div className=\"space\" />\n                          <div className=\"space\" />\n                        </Grid>\n                      ) : (\n                        <Grid item xs={12}>\n                          <div className=\"space\" />\n                          <div>\n                            <span className=\"s-size\">\n                              <Translate id=\"max.invalidreferral\" />\n                            </span>\n                          </div>\n                          <div className=\"space\" />\n                        </Grid>\n                      )}\n                    </Grid>\n                  </Grid>\n\n                  <Grid item xs={12} md={6}>\n                    <Grid item xs={12} md={12}>\n                      <div className=\"middle-children\">\n                        <img\n                          src=\"images/misc/gold1.png\"\n                          className=\"image-small\"\n                          alt=\"tron\"\n                        />\n                        <span className=\"my-account-title foo\">\n                          <Translate id=\"max.referrerEarnings\" />\n                        </span>\n                      </div>\n                      <div className=\"foo\">\n                        <span className=\"gold balance-number\">\n                          {referrerEarnings || 0}\n                        </span>\n                      </div>\n                    </Grid>\n                    <Grid item xs={12}>\n                      <div className=\"global-stats-item m-size\">\n                        <Translate id=\"max.1stlvlreferral\" />\n                        （5%): <span className=\"gold\">{level1RefCount}</span>\n                      </div>\n                      <div className=\"global-stats-item m-size\">\n                        <Translate id=\"max.2ndlvlreferral\" />\n                        （2%): <span className=\"gold\">{level2RefCount}</span>\n                      </div>\n                      <div className=\"global-stats-item m-size\">\n                        <Translate id=\"max.3rdlvlreferral\" />\n                        （0.5%): <span className=\"gold\">{level3RefCount}</span>\n                      </div>\n                      <div className=\"global-stats-item m-size\">\n                        <Translate id=\"max.inviteereferral\" />\n                        （0.5%)\n                      </div>\n                    </Grid>\n                  </Grid>\n                </Grid>\n              </div>\n\n              <div id=\"section_rates\" />\n              <div className=\"ground\" />\n              <div className=\"ratesground\">\n                <Grid container spacing={0}>\n                  <Grid item xs={12} md={6} className=\"m-t-50\">\n                    <div className=\"duality\">\n                      <Translate id=\"max.investment\" />(\n                      <Translate id=\"max.baseon\" />{' '}\n                      <span className=\"foo red\">1000</span> TRX{' '}\n                      <Translate id=\"max.investment\" />)\n                    </div>\n                    <div className=\"space\" />\n                    <Grid container spacing={24}>\n                      <Grid item xs={3} className=\"m-size foo\">\n                        <div>\n                          <span className=\"duality\">\n                            <Translate id=\"max.dayspassed\" />\n                          </span>\n                        </div>\n                      </Grid>\n                      <Grid item xs={3} className=\"m-size\">\n                        <div className=\"middle-children foo\">\n                          <div>\n                            <span className=\"duality\">\n                              <Translate id=\"max.miningpower\" />\n                            </span>\n                          </div>\n                        </div>\n                      </Grid>\n                      <Grid item xs={6} className=\"m-size\">\n                        <div className=\"foo\">\n                          <div>\n                            <span className=\"duality\">\n                              <Translate id=\"max.goldinreturn\" />{' '}\n                            </span>\n                          </div>\n                        </div>\n                      </Grid>\n                    </Grid>\n                    {ratesData &&\n                      ratesData.map(rate => {\n                        rateId++;\n                        const key = 'rate-' + rateId;\n                        const day = rate.day;\n                        const interest = rate.interest;\n                        const mined = rate.mined;\n\n                        return (\n                          <Grid container spacing={24} key={key}>\n                            <Grid item xs={3} className=\"m-size foo\">\n                              <div>\n                                <span>{day}</span>{' '}\n                              </div>\n                            </Grid>\n                            <Grid item xs={3} className=\"m-size\">\n                              <div className=\"middle-children foo\">\n                                <div>\n                                  <span className=\"aqua\">{interest / 10}%</span>{' '}\n                                </div>\n                              </div>\n                            </Grid>\n                            <Grid item xs={6} className=\"m-size\">\n                              <div className=\"middle-children foo\">\n                                <div>\n                                  <span className=\"gold\">{mined}</span>{' '}\n                                </div>\n                              </div>\n                            </Grid>\n                          </Grid>\n                        );\n                      })}\n                    <div className=\"space\" />\n\n                    <div className=\"m-size duality\">\n                      <Translate id=\"max.selldesc3\" />\n                    </div>\n                  </Grid>\n\n                  <Grid item xs={12} md={6} className=\"m-t-50\">\n                    <div className=\"duality\">\n                      <Translate id=\"max.boost\" />(<Translate id=\"max.baseon\" />{' '}\n                      <span className=\"foo red\">1000</span>{' '}\n                      TRX <Translate id=\"max.boost\" />)\n                    </div>\n                    <div className=\"space\" />\n                    <Grid container spacing={24}>\n                      <Grid item xs={3} className=\"m-size foo\">\n                        <div>\n                          <span className=\"duality\">\n                            <Translate id=\"max.dayspassed\" />\n                          </span>\n                        </div>\n                      </Grid>\n                      <Grid item xs={3} className=\"m-size\">\n                        <div className=\"middle-children foo\">\n                          <div>\n                            <span className=\"duality\">\n                              <Translate id=\"max.miningpower\" />\n                            </span>\n                          </div>\n                        </div>\n                      </Grid>\n                      <Grid item xs={6} className=\"m-size\">\n                        <div className=\"foo\">\n                          <div>\n                            <span className=\"duality\">\n                              <Translate id=\"max.goldinreturn\" />{' '}\n                            </span>\n                          </div>\n                        </div>\n                      </Grid>\n                    </Grid>\n                    {boostRatesData &&\n                      boostRatesData.map(rate => {\n                        rateId++;\n                        const key = 'rate-' + rateId;\n                        const day = rate.day;\n                        const interest = rate.interest;\n                        const mined = rate.mined;\n\n                        return (\n                          <Grid container spacing={24} key={key}>\n                            <Grid item xs={3} className=\"m-size foo\">\n                              <div>\n                                <span>{day}</span>{' '}\n                              </div>\n                            </Grid>\n                            <Grid item xs={3} className=\"m-size\">\n                              <div className=\"middle-children foo\">\n                                <div>\n                                  <span className=\"aqua\">{interest / 10}%</span>{' '}\n                                </div>\n                              </div>\n                            </Grid>\n                            <Grid item xs={6} className=\"m-size\">\n                              <div className=\"middle-children foo\">\n                                <div>\n                                  <span className=\"gold\">{mined}</span>{' '}\n                                </div>\n                              </div>\n                            </Grid>\n                          </Grid>\n                        );\n                      })}\n                    <div className=\"space\" />\n\n                    <div className=\"m-size duality\">\n                      <Translate id=\"max.boostdesc3\" />\n                    </div>\n                  </Grid>\n                </Grid>\n              </div>\n              <div className=\"roof\" />\n\n              <div id=\"section_faq\" />\n              <Grid container spacing={0}>\n                <Grid item xs={12}>\n                  <div className=\"race-placeholder faq-card\">\n                    <div className=\"my-account foo\">\n                      <span className=\"m-size dark\">\n                        <Translate id=\"max.faq\" />\n                      </span>\n                    </div>\n                    <div className=\"content-card\">\n                      <div className=\"intro-placeholder\">\n                        <ul>\n                          <li className=\"m-size gold foo\">\n                            <Translate id=\"faq.q1\" />\n                          </li>\n                          <li className=\"s-size dark\">\n                            <Translate id=\"faq.a1\" />\n                          </li>\n\n                          <li className=\"m-size gold foo\">\n                            <Translate id=\"faq.q2\" />\n                          </li>\n                          <li className=\"s-size dark\">\n                            <Translate id=\"faq.a2\" />\n                          </li>\n\n                          <li className=\"m-size gold foo\">\n                            <Translate id=\"faq.q3\" />\n                          </li>\n                          <li className=\"s-size dark\">\n                            <Translate id=\"faq.a3\" />\n                          </li>\n\n                          <li className=\"m-size gold foo\">\n                            <Translate id=\"faq.q4\" />\n                          </li>\n                          <li className=\"s-size dark\">\n                            <Translate id=\"faq.a4\" />\n                          </li>\n                          <li className=\"m-size gold foo\">\n                            <Translate id=\"faq.q5\" />\n                          </li>\n                          <li className=\"s-size dark\">\n                            <Translate id=\"faq.a5\" />\n                          </li>\n                          <li className=\"m-size gold foo\">\n                            <Translate id=\"faq.q6\" />\n                          </li>\n                          <li className=\"s-size dark\">\n                            <Translate id=\"faq.a6\" />\n                          </li>\n                          <li className=\"m-size gold foo\">\n                            <Translate id=\"faq.q7\" />\n                          </li>\n                          <li className=\"s-size dark\">\n                            <Translate id=\"faq.a7\" />\n                          </li>\n                        </ul>\n                      </div>\n                    </div>\n                  </div>\n                </Grid>\n              </Grid>\n            </div>\n          </div>\n          <div className=\"space\" />\n        </div>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  reloadAccountNonce: state.app.reloadAccountNonce,\n});\n\nconst mapDispatchToProps = {\n  showSnackbar,\n  setScreen,\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withLocalize(withStyles(styles)(DailyDivs)));\n","import TronWeb from 'tronweb';\nimport BigNumber from 'bignumber.js';\nimport store from '../store';\nimport { showSnackbar } from '../actions/snackbar';\nimport { SNACKBAR_ERROR } from '../components/Common/GameSnackbar';\n\nimport {\n  FOUNDATION_ADDRESS,\n  initContract,\n  injectTronWeb,\n  sunToTrx,\n  TRON_WEB_STATE_LOCKED,\n  TRON_WEB_STATE_NOT_MAINNET,\n  weiToToken,\n} from './tronCommon';\nimport { toTruncateDown } from './math';\n\nconst TRONGRID_API = 'https://api.trongrid.io';\n\n// MAINNET\nconst CONTRACT_ADDRESS = '413f100fbdd26bff25982c35cdadc2f2e6837516cd';\n\n// TESTNET\n// const CONTRACT_ADDRESS = '413084e0c71893d69c2ec1e3fb7701a479da2c9c05';\n\nlet contract;\nlet tronWebState;\nlet tronWeb;\n\nexport default {\n  async initTronWeb(address) {\n    tronWeb = new TronWeb(TRONGRID_API, TRONGRID_API, TRONGRID_API);\n    tronWeb.defaultAddress = {\n      hex: tronWeb.address.toHex(address),\n      base58: FOUNDATION_ADDRESS,\n    };\n\n    tronWebState = await injectTronWeb(tronWeb);\n    contract = await initContract(\n      TRON_WEB_STATE_LOCKED,\n      tronWeb,\n      CONTRACT_ADDRESS\n    );\n    if (!contract) {\n      tronWebState = TRON_WEB_STATE_NOT_MAINNET;\n      store.dispatch(\n        showSnackbar('message.needToChangeNetwork', SNACKBAR_ERROR)\n      );\n    }\n    return tronWebState;\n  },\n\n  async getPlayerData(address) {\n    if (!this.isValidAddress(address)) {\n      return null;\n    }\n\n    const myTokens = await contract.myTokens().call();\n    const myDividends = await contract.myDividends().call();\n    const myRoundStats = await contract\n      .getPlayerInfoCurrentRound(address)\n      .call();\n    const myReferrals = await contract.myReferrals().call();\n    return {\n      myTokens: myTokens\n        ? toTruncateDown(weiToToken(new BigNumber(myTokens).toNumber()), 6)\n        : 0,\n      myDividends: myDividends\n        ? sunToTrx(new BigNumber(myDividends).toNumber())\n        : 0,\n      myReferrals: myReferrals\n        ? sunToTrx(new BigNumber(myReferrals).toNumber())\n        : 0,\n      myRoundBuy: myRoundStats\n        ? sunToTrx(new BigNumber(myRoundStats[0]).toNumber())\n        : 0,\n      myRoundSell: myRoundStats\n        ? sunToTrx(new BigNumber(myRoundStats[1]).toNumber())\n        : 0,\n    };\n  },\n\n  async balanceOf(address) {\n    const balance = await contract.balanceOf(address).call();\n    return balance;\n  },\n\n  isValidAddress(address) {\n    return address && tronWeb.isAddress(address);\n  },\n};\n","import { combineReducers, createStore } from 'redux';\nimport reducers from '../reducers/index';\n\nconst index = createStore(\n  combineReducers({\n    ...reducers,\n  }),\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nexport default index;\n","export const toTruncateDown = (value, n) => {\n  if (value < Math.pow(0.1, n)) {\n    return 0;\n  }\n  const v = value.toString().split('.');\n  if (n <= 0) {\n    return v[0];\n  }\n\n  let f = v[1] || '';\n  if (f.length > n) {\n    const result = `${v[0]}.${f.substr(0, n)}`;\n    return result;\n  }\n  while (f.length < n) {\n    f += '0';\n  }\n  const result = `${v[0]}.${f}`;\n  return result;\n};\n","import ReactGA from 'react-ga';\n// import { isProductionEnvironment } from './environment';\nconst isProductionEnvironment = false;\n\nexport default {\n  initialize: () => {\n    isProductionEnvironment && ReactGA.initialize('UA-233322333-1');\n  },\n  pageview: (rawPath, trackerNames, title) => {\n    isProductionEnvironment && ReactGA.pageview(rawPath, trackerNames, title);\n  },\n  event: (\n    { category, action, label, value, nonInteraction, transport, ...args } = {},\n    trackerNames\n  ) => {\n    isProductionEnvironment &&\n      ReactGA.event(\n        { category, action, label, value, nonInteraction, transport, ...args },\n        trackerNames\n      );\n  },\n};\n","import Lockr from 'lockr';\nimport qs from 'qs';\n\nimport { isValidCode } from './tronCommon';\nimport { SCREEN_VAULT } from '../actions/app';\n\nconst REFERRAL_ADDRESS_KEY = 'TRON_MINE_REFERRAL'; \n\nexport const parseReferralAddress = () => {\n  const storedReferralAddress = Lockr.get(REFERRAL_ADDRESS_KEY);\n  const parsedQueryString = qs.parse(window.location.search.substr(1));\n  let referralAddress = parsedQueryString['ref'];\n  if (referralAddress && isValidCode(referralAddress)) {\n    console.log(referralAddress);\n    // store the new referralAddress\n    Lockr.set(REFERRAL_ADDRESS_KEY, referralAddress);\n  } else if (!!storedReferralAddress) {\n    referralAddress = storedReferralAddress;\n  } else {\n    referralAddress = 0; // FOUNDATION_CODE; default is 0, so the first user without a code won't use admin as referrer\n  }\n  return referralAddress;\n};\n\nexport const parseGameRoute = () => {\n  return SCREEN_VAULT;\n};\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { MuiThemeProvider } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Card from '@material-ui/core/Card';\n\nimport { withLocalize, Translate } from 'react-localize-redux';\nimport siteTranslations from '../../translations/translate.json';\n\nimport { showSnackbar } from '../../actions/snackbar';\n\nimport customTheme from '../Common/customTheme';\n\nimport { TRON_WEB_STATE_NOT_MAINNET } from '../../utils/tronCommon';\n\nimport TronAccountDetails from '../../utils/tronAccountDetails';\n\nimport Tracker from '../../utils/tracker';\nimport { SNACKBAR_ERROR } from '../Common/GameSnackbar';\n\nconst initialState = {\n  myTokens: null,\n  myDividends: null,\n  myRoundBuy: null,\n  myRoundSell: null,\n  myReferrals: null,\n  accountAddress: '',\n};\n\nclass AccountDetails extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = initialState;\n    this.props.addTranslation(siteTranslations);\n  }\n\n  async componentDidMount() {\n    Tracker.pageview('/accountDetails');\n  }\n\n  search = async () => {\n    const { showSnackbar } = this.props;\n    const { accountAddress } = this.state;\n    if (!accountAddress) {\n      showSnackbar('Address can not be empty!', SNACKBAR_ERROR);\n      return;\n    }\n    const tronWebState = await TronAccountDetails.initTronWeb(accountAddress);\n    if (tronWebState === TRON_WEB_STATE_NOT_MAINNET) {\n      return;\n    }\n\n    await this.loadData(accountAddress);\n  };\n\n  loadData = async accountAddress => {\n    await this.getPlayerData(accountAddress);\n  };\n\n  getPlayerData = async address => {\n    const playerData = await TronAccountDetails.getPlayerData(address);\n    if (!playerData) {\n      return;\n    }\n    const myTokens = playerData.myTokens;\n    const myReferrals = playerData.myReferrals;\n    const myDividends = playerData.myDividends;\n    const myRoundBuy = playerData.myRoundBuy;\n    const myRoundSell = playerData.myRoundSell;\n    this.setState({\n      myTokens,\n      myDividends,\n      myReferrals,\n      myRoundBuy,\n      myRoundSell,\n    });\n  };\n\n  handleChange = async event => {\n    this.setState({ [event.target.name]: event.target.value });\n  };\n\n  render() {\n    const {\n      myTokens,\n      myDividends,\n      myRoundBuy,\n      myRoundSell,\n      myReferrals,\n      accountAddress,\n    } = this.state;\n\n    return (\n      <MuiThemeProvider theme={customTheme}>\n        <div className=\"cards\">\n          <Card color=\"primary\" className=\"card\">\n            <Grid\n              container\n              spacing={24}\n              className=\"component-card account-card\"\n            >\n              <Grid item xs={12} md={6}>\n                <div className=\"buy-placeholder\">\n                  <Grid item xs={12}>\n                    <div className=\"buy-placeholder\">\n                      <div>\n                        <span className=\"l-size\">\n                          <Translate id=\"account.searchAddress\" />\n                        </span>\n                      </div>\n                      <div className=\"space\" />\n                      <div className=\"input-box\">\n                        <TextField\n                          label=\"\"\n                          name=\"accountAddress\"\n                          className=\"buy-token\"\n                          autoComplete=\"off\"\n                          placeholder=\"address e.g. T*****\"\n                          value={accountAddress}\n                          onChange={this.handleChange}\n                          margin=\"normal\"\n                          variant=\"outlined\"\n                        />\n                      </div>\n\n                      <Grid container spacing={24}>\n                        <Grid item xs={12}>\n                          <Button\n                            id=\"buy-button\"\n                            className=\"buy-button\"\n                            variant=\"contained\"\n                            onClick={this.search}\n                          >\n                            <Translate id=\"account.search\" />\n                          </Button>\n                        </Grid>\n                      </Grid>\n                    </div>\n                  </Grid>\n                  <Grid container spacing={24}>\n                    <Grid item xs={12}>\n                      <div className=\"space\" />\n                      <div className=\"s-size\">\n                        <Translate id=\"general.token\" /> {myTokens || 0}{' '}\n                        <span className=\"blue\">\n                          <Translate id=\"general.token\" />\n                        </span>\n                      </div>\n                      <div className=\"space\" />\n                      <div className=\"s-size\">\n                        <Translate id=\"general.myReferrals\" />{' '}\n                        {myReferrals || 0} <span className=\"blue\">TRX</span>\n                      </div>\n                      <div className=\"space\" />\n                      <div className=\"s-size\">\n                        <Translate id=\"general.claimableTrx\" />{' '}\n                        {myDividends || 0} <span className=\"blue\">TRX</span>\n                      </div>\n                    </Grid>\n                    <Grid item xs={12}>\n                      <div className=\"space\" />\n                      <div className=\"s-size\">\n                        <Translate id=\"general.roundBuyTrx\" /> {myRoundBuy || 0}{' '}\n                        <span className=\"blue\">TRX</span>\n                      </div>\n                      <div className=\"space\" />\n                      <div className=\"s-size\">\n                        <Translate id=\"general.roundSellTrx\" />{' '}\n                        {myRoundSell || 0} <span className=\"blue\">TRX</span>\n                      </div>\n                    </Grid>\n                  </Grid>\n                </div>\n              </Grid>\n            </Grid>\n          </Card>\n        </div>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  showSnackbar,\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(withLocalize(AccountDetails));\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { SCREEN_VAULT, SCREEN_ACCOUNT_DETAILS } from '../../actions/app';\n\nimport DailyDivs from '../TronMax/DailyDivs';\nimport AccountDetails from '../TronMax/AccountDetails';\n\nconst RoutingScreen = ({ screen }) => {\n  switch (screen) {\n    case SCREEN_VAULT:\n      return <DailyDivs />;\n    case SCREEN_ACCOUNT_DETAILS:\n      return <AccountDetails />;\n    default:\n      return null;\n  }\n};\n\nconst mapStateToProps = state => ({\n  screen: state.app.screen,\n});\n\nexport default connect(mapStateToProps)(RoutingScreen);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { MuiThemeProvider } from '@material-ui/core/styles';\n\nimport { withLocalize } from 'react-localize-redux';\n\nimport customTheme from './customTheme';\n\nclass Footer extends React.Component {\n  render() {\n    return (\n      <MuiThemeProvider theme={customTheme}>\n        <div className=\"footer\">\n          <span className=\"s-size gold copy-right\">\n            {' '}\n            &copy; 2020 TronMine - Decentralized mining games on Tron\n            Blockchain\n          </span>\n        </div>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nexport default connect(null)(withLocalize(Footer));\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withLocalize } from 'react-localize-redux';\nimport { renderToStaticMarkup } from 'react-dom/server';\n\nimport MuiThemeProvider from '@material-ui/core/styles/MuiThemeProvider';\n\nimport { setScreen } from '../actions/app';\nimport customTheme from './Common/customTheme';\nimport AppBar from './Common/GameAppBar';\nimport Snackbar from './Common/GameSnackbar';\nimport RoutingScreen from './Common/RoutingScreen';\nimport Footer from './Common/Footer';\nimport './App.css';\nimport Tracker from '../utils/tracker';\nimport { parseGameRoute } from '../utils/parseQueryString';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.props.initialize({\n      languages: [\n        { name: 'English', code: 'en' },\n        { name: 'Chinese', code: 'cn' },\n      ],\n      options: { renderToStaticMarkup },\n    });\n  }\n\n  componentDidMount() {\n    this.initTracker();\n    this.initScreen();\n  }\n\n  initScreen = () => {\n    const { setScreen } = this.props;\n    const screen = parseGameRoute();\n    setScreen(screen);\n  };\n\n  initTracker = () => {\n    Tracker.initialize();\n    Tracker.pageview('/app');\n  };\n\n  render() {\n    return (\n      <MuiThemeProvider theme={customTheme}>\n        <div className=\"App\">\n          <AppBar />\n          <div id=\"body\">\n            <RoutingScreen />\n          </div>\n          <Footer />\n          <Snackbar />\n        </div>\n      </MuiThemeProvider>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  setScreen,\n};\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(withLocalize(App));\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { LocalizeProvider } from 'react-localize-redux';\nimport './index.css';\nimport './walk.js';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\n\nReactDOM.render(\n  <LocalizeProvider>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </LocalizeProvider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}